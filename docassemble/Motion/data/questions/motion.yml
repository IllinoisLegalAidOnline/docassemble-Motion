metadata:
  title: Motion
  short title: Motion
  comment: This program helps you ask a judge to do something in a court case you are involved in.
  authors:
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml  
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - users[i].lawyer: ALIndividual
  - other_parties: ALPeopleList.using(there_are_any=True)
  - other_parties[i].lawyer: ALIndividual
  - witness: ALIndividual
  - delivery_parties: ALPeopleList.using(there_are_any=True)
  - delivery_parties[i].lawyer: ALIndividual
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')
---
code: |
  al_form_type = 'existing_case'
  ilao_easy_form_title = "Motion"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/motion"
  form_name = "Motion"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-Motion'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_case_info: Case info
  - section_motion: Motion details
  - section_delivery: Notice and delivery
  - section_about_you: About you
  - section_download: Download  
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  how_to_use
  set_progress(5)
  whats_next
  accept_terms
  if existing_case == False:
    must_be_existing_case
  
  set_progress(15)
  nav.set_section('section_case_info')
  party_label
  users.gather()
  set_progress(20)
    
  if party_label == "plaintiff" or party_label == "petitioner":
    if anyone_opposing == True:
      other_parties.gather()
  else:
    anyone_opposing = True # find a way to move to separate code block
    other_parties.gather()
  
  set_progress(25)
  if in_re_check == True:
    in_re_label
  trial_court_index
  case_number
  
  set_progress(30)
  nav.set_section('section_motion')
  if motion_type == "Something else":
    motion_summary
    motion_body
    preview_motion
    if motion_additional_page:
      additional_motion_body
      preview_additional_motion
  elif motion_type == "Reschedule a court date":
    if date_difference(starting=reschedule_date, ending=today()).days > 30:
      beyond_30_days
    elif today() > reschedule_date and date_difference(starting=reschedule_date, ending=today()).days <= 30:
      within_30_days
    elif (anyone_opposing == True or users.number() > 1) and reschedule_date.minus(days=7) <= today():
      short_notice
    court_date_reason
    if continue_reason_type == "Other":
      continue_reason
    elif continue_reason_type == "Witness unavailable":
      witness.name.first
      if know_witness_address:
        witness.address.address
      if used_due_diligence:
        due_diligence_effort
      else:
        no_due_diligence
      witness_testimony
      available_date
      continue_reason_string_built
    else:
      evidence_description
      if used_due_diligence:
        due_diligence_effort
      else:
        no_due_diligence
      evidence_shows
      available_date
      continue_reason_string_built
    preview_continue_or_extend
  else:
    unfinished_task
    if date_difference(starting=current_deadline, ending=today()).days > 30:
      beyond_30_days
    elif today() > current_deadline and date_difference(starting=current_deadline, ending=today()).days <= 30:
      within_30_days
    elif (anyone_opposing == True or users.number() > 1) and current_deadline.minus(days=7) <= today():
      short_notice

    new_deadline
    extension_reason
    preview_continue_or_extend
    
  e_signature

  set_progress(50)
  nav.set_section('section_delivery')
  if anyone_opposing == True or users.number() > 1:

    notice_intro
    if trial_court_index == -1:
      cook_district
    courthouse_info
    if has_court_date:
      hearing_date

    delivery_intro
    if delivery_parties.number() > 8:
      extra_delivery_forms
    set_progress(75)
    for person in delivery_parties[:8]:
      if person.is_represented:
        person.lawyer.name.first
      person.address.address
      if person.knows_delivery_method:
        person.mail_delivery
        person.delivery_date
    
    for person in delivery_parties[:8]:
      if person.knows_delivery_method == False or person.hand_delivery == True:
        hand_delivery_info

  set_progress(75)
  nav.set_section('section_about_you')
  users[0].address.address
  users[0].phone_number
  if users[0].email_notice == True:
    users[0].email

  set_progress(100)
  nav.set_section('section_download')
  get_docs_screen
---
id: welcome
question: |
  Motion
subquestion: |
  Welcome to Illinois Legal Aid Online's **Motion** Easy Form.

  A motion is a request to the judge to make the court or a party in the case do something. This program makes a *Motion* or a *Motion to Continue or Extend Time* based on what you need.
  
  To learn more, read about [**preparing, filing, and presenting motions in court**](https://www.illinoislegalaid.org/node/32286).
field: sees_nav_bar
---
id: instructions
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  To use this program you will need to know: 

  * Your court case information, 
  * What you want the court to do,
  * Names and addresses of the other parties, and 
  * Names and addresses of the other parties’ lawyers, if any. 

  You can find most of this information on other court papers you have about this case. 

  Set aside 10 to 15 minutes to finish this program. You can log in and save your work to return to later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some questions have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that also gives help.
---
template: help_example
subject: |
  **You can expand sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  After you download your Motion, you must file it with the court. This program does not file your ${ form_name } for you.
  
  You may need to schedule a court date for when the judge will hear your motion. The scheduling process is different depending on your location and case type. Check with your local circuit clerk for how to schedule a motion hearing.
  
  Finally, you will need to send your *Motion* and *Notice of Court Date for Motion* forms to other parties in your case, if there are any.
  
  To learn more, read the "How to File and Send a Motion" instructions you can download at the end of this program. 
---
id: accept terms
question: |
  Terms of use
subquestion: |
  This program does not provide legal advice. It does not take the place of advice from a lawyer.

  Using this program does not create an attorney-client relationship between you and Illinois Legal Aid Online or its employees.

  ${ collapse_template(get_legal_help) }  

fields:
  - To continue, you must accept the [**terms of use**](https://www.illinoislegalaid.org/about/terms-of-use).: accept
    datatype: checkboxes
    none of the above: False
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use. 
continue button field: accept_terms
---
template: get_legal_help
subject: |
  **What if I need legal advice?**
content: |  
  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer.
  
  Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
id: not legal advice
event: not_legal_advice
question: |
  Sorry
subquestion: |
  You cannot continue unless you understand this program does not give legal advice and accept the [**terms of use**](https://www.illinoislegalaid.org/about/terms-of-use).

  This program will only help you complete the legal documents you want. By providing this program we are not giving you legal advice. Your use of this program does not mean that Illinois Legal Aid Online will provide you with a lawyer or with any individual legal help.

  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer. If you would like help finding free or low-cost legal services in your area, use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help).

buttons:
  - Exit: exit
  - Restart: restart
---
id: existing case
question: |
  Are you filing a motion into an existing case?
subquestion: |
  The court case must have already started, either by you or someone else.
  
  ${ collapse_template(motion_help) }  
fields:
  - no label: existing_case
    datatype: yesnoradio  

---
template: motion_help
subject: |
  **What if I am not sure?**
content: |
  Most motions are filed into cases that are still ongoing, but some motions are filed into cases after they are finished. For example, someone might file a Motion to Seal a Court Record into a case that is already over.

---
id: must be existing case
event: must_be_existing_case
question: |
  Sorry
subquestion: |
  You can only file a motion into a case that has already started.

  Click **Back** if you made a mistake. Or you can talk with a lawyer to discuss your options. Use **[Get Legal Help](https://www.illinoislegalaid.org/get-legal-help)** to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart

---
id: party label
question: |
  What is your party label in the case?
subquestion: |
  ${ collapse_template(which_party) }  
field: party_label
choices:
  - Plaintiff: plaintiff
  - Petitioner: petitioner
  - Defendant: defendant
  - Respondent: respondent
---
template: which_party
subject: |
  **How do I figure out my party label?**
content: |
  If you filed a new case, you are either the Plaintiff or the Petitioner.

  If someone filed the case against you, you are either the Defendant or the Respondent.

  The other court forms in the case should help you figure it out. Look at the top (the caption) of the Complaint or Petition. That form should have a label by your name.

---
id: any other users
question: |
  Is anyone else on your side of this case?
subquestion: |
  ${ collapse_template(other_users_help) }  

  % if len(users.elements) > 1:  
  So far you have told us about ${comma_and_list(users.complete_elements().full_names())}.
  % endif  
fields:
  - "Anyone else?": users.there_is_another
    datatype: yesnoradio
---
template: other_users_help
subject: |
  **How do I know if there are others?**
content: |  
  You said you are the ${ party_label.capitalize() }. The other people on your side of the case would be co-${ party_label}s.
---
id: any other party
question: |
  Are there ${ opposing_label }s in the case?
subquestion: |
  Certain kinds of cases do not have an opposing party, such as a Name Change or an Expungement case.
fields:
  - no label: anyone_opposing
    datatype: yesnoradio

---
depends on:
  - user_started_case
sets:
  - users[i].name.first
id: other users names
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  What is the name of the ${ ordinal(i) } person who is part of the case with you?
  % else:
  What is the name of the ${ ordinal(i) } person who is adding their name to
  this form with you?
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      users[i].name_fields(person_or_business='unsure')
---
template: long_name_help
subject: |
  **What if the person's name doesn't fit into 4 fields?**
content: |
  If the person has a long name like "Jane Smith, Director of Housing," select **Business or organization**. You can then enter the full name and title.
---
code: |
  if party_label == 'plaintiff':
    opposing_label = 'defendant'
  if party_label == 'defendant':
    opposing_label = 'plaintiff'
  if party_label == 'petitioner':
    opposing_label = 'respondent'
  if party_label == 'respondent':
    opposing_label = 'petitioner'
---
id: any other party
question: |
  Are there ${ opposing_label }s in the case?
subquestion: |
  Certain kinds of cases do not have an opposing party, such as a Name Change or an Expungement case.

  ${ collapse_template(other_parties_help) }
fields:
  - no label: anyone_opposing
    datatype: yesnoradio
---
template: other_parties_help
subject: |
  **How do I know if there are ${ opposing_label }s?**
content: |  
  You said you are the ${ party_label.capitalize() }. The people on the other side of the case would be ${ opposing_label}s.

  Look at the top of the other court papers. If there are ${ opposing_label}s, you should see the names of other people listed as ${ opposing_label}s.
---
sets:
  - other_parties[i].name.first
id: other party name
question: |
  What is the name of the ${ ordinal(i) } ${ opposing_label }?
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
id: any more other parties
question: |
  Are there any other ${ opposing_label }s in the case?
subquestion: |  
  So far you have told us about ${comma_and_list(other_parties.complete_elements().full_names())}.
fields:
  - "Anyone else?": other_parties.there_is_another
    datatype: yesnoradio
---
# modified other opposing parties question
# add to basic questions
#id: any other opposing parties
#question: |
#  % if users==plaintiffs:
#  Is there another **defendant** or **respondent** in this case?
#  % else:
#  Is there another **plaintiff** or **petitioner** in this case?
#  % endif
#subquestion: |
#  % if len(other_parties.elements) >= 1:  
#  So far you have told us about ${comma_and_list(other_parties.complete_elements().full_names())}.
#  % endif
#fields:
#  - "Anyone else?": other_parties.there_is_another
#    datatype: yesnoradio
#---
#depends on:
#  - user_started_case
#sets:
#  - other_parties[i].name.first
#id: names of opposing parties
#question: |
#  % if users==plaintiffs:
#  Name of ${ ordinal(i) } **defendant** or **respondent** in this case
#  % else:
#  Name of ${ ordinal(i) } **plaintiff** or **petitioner** in this case
#  % endif
#subquestion: |
#  ${ collapse_template(long_name_help) }
#fields:
#  - code: |
#      other_parties[i].name_fields(person_or_business='unsure')
---
id: trial court county
continue button field: case_county
question: |
  In which county was this case filed?
fields:
  - no label: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
#fields:
#  - no label: trial_court_index
#    code: |
#      court_list._load_courts()['address_county'].items()
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])

---
id: in re check
question: |
 Does the court case have the words "**In re:**" in the name?
subquestion: |
  Look at the name of the case at the top of the court papers. “In re” is often used in probate, bankruptcy, and some family law cases. For example, a probate case regarding Jane Doe’s estate might be called “In re: Estate of Jane Doe.”
fields:
  - no label: in_re_check
    datatype: yesnoradio
---
id: in re label
question: |
  What does it say after "**In re:**" on the court papers?
fields:
  - In re:: in_re_label
    maxlength: 50
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
id: case number
question: |
  What is the case number?
subquestion: |
  ${ collapse_template(case_number_help) }  
fields:
  - Case number: case_number
---
template: case_number_help
subject: |
  **Where can I find this?**
content: |  
  The case number should be on your court papers. Look at the Complaint or Petition, or the Summons if you received one. It is usually in the top-right part of the first page.
  
  If you started the case, the court clerk should have given you the case number.
  
  In this example, the case number is **2022 EXAMPLE 123**.
  
  [FILE case_number_example.png, 100%, Summons form showing case number]
---  
id: motion type
question: |
  Why are you filing a motion?
fields: 
  - no label: motion_type
    datatype: radio
    choices:
      - I need to reschedule a court date that was already scheduled.: Reschedule a court date
        help: |
          Examples include:
    
          * You will need to miss a court date due to a family medical emergency,
          * You need more time to find a **witness** that you need for your case, or
          * The **evidence** you need for your case won't be available on the scheduled court date.      
      - I need to extend the deadline to do something.: Extend a deadline  
        help: |
          Examples include:
    
          * You need more time to file an Answer in your court case, or
          * You need more time to respond to something the other party filed in your case.      
      - I need the judge to do something else in my court case.: Something else  
---  

# additional motion to continue or extend time questions and logic here
  
---  
id: motion summary
question: |
  Motion summary
subquestion: |
  In a few words, explain what you want the judge to do in this court case.
fields:
  - Motion summary: motion_summary
    maxlength: 60
---
id: motion body
question: |
  What do you want the judge to do?
subquestion: |
  Explain what you want the judge to do in your court case. Be sure to state why it should be done.
  
  The motion has room for about 34 lines of text. If you need more room to explain, you can add a second page. You can preview it on the next screen.
fields:
  - Motion: motion_body
    input type: area
    rows: 15

---
id: preview motion
continue button field: preview_motion
reconsider:
  - motion_attachment['preview']
question: |
  Motion preview
subquestion: |
  Click the below image to preview your Motion.
  
  If this looks good, click **Next**.
  
  If you want to make changes, click **Back** or go to the [**Motion details**](${ url_action('section_motion') }) section.
  
  If you want to add another page, you can enter more text.
  
  **Note: this is not a complete form.** Finish the program to get all your forms.
  
  ${ pdf_concatenate(motion_attachment['preview'], filename="motion-preview.pdf") }
  
  **Note: this is not a complete form.** Finish the program to get all your forms.
---
id: add additional motion page
question: |
  Do you want to add a second page to your motion?
subquestion: |
  You will be able to preview the Motion during the program and at the end.
fields:
  - no label: motion_additional_page
    datatype: yesnoradio
---
id: additional motion body
question: |
  More motion text
subquestion: |
  Enter the second page of your motion.
  
  The additional motion page has room for about 36 lines of text. You can preview it on the next screen.
fields:
  - Motion: additional_motion_body
    input type: area
    rows: 15
---
id: preview additional motion
continue button field: preview_additional_motion
reconsider:
  - additional_motion_attachment['preview']
question: |
  Additional motion preview
subquestion: |
  Click the below image to preview your Motion and Additional Motion.
  
  If this looks good, click **Next**.
  
  If you want to make changes, click **Back** or go to the [**Motion details**](${ url_action('section_motion') }) section.
  
  If you want to add another page, you can enter more text.
  
  **Note: this is not a complete form.** Finish the program to get all your forms.
 
  ${ pdf_concatenate(motion_attachment['preview'], additional_motion_attachment['preview'], filename="motion-preview.pdf") }

  **Note: this is not a complete form.** Finish the program to get all your forms.
---
id: original court date
question: |
  When is the court date you want to reschedule?
fields:
  - Date: reschedule_date
    datatype: date
    #min: ${ today().format("yyyy-MM-dd") }
  - Time: reschedule_time
    datatype: time
---
id: short notice warning
continue button field: short_notice
question: |
  % if motion_type == "Reschedule a court date":
  Court date soon
  % else:
  Deadline soon
  % endif
subquestion: |
  % if motion_type == "Reschedule a court date":
  Since you have 7 days or fewer until the court date, you might not have enough time to notify all other parties in your case.
  
  You can still file the *Motion to Continue or Extend Time*, but the judge might not reschedule your court date. The judge’s clerk may be able to help you.
  % else:
  Since you have 7 days or fewer until the deadline, you might not have enough time to notify all other parties in your case.
  
  You can still file the *Motion to Continue or Extend Time*, but the judge might not extend the deadline. The judge’s clerk may be able to help you.
  % endif
---
id: within 30 days
continue button field: within_30_days
question: |
  Within 30 days
subquestion: |
  % if party_label == "plaintiff" or party_label == "petitioner":
    % if motion_type == "Reschedule a court date":
    Since the ${ reschedule_date } court date already passed, the judge can decide whether to hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should reschedule the court date.
    % elif motion_type == "Extend a deadline":
    Since the ${ current_deadline } deadline already passed, the judge can decide whether to hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should extend the deadline.
    % endif
    
    If your case was dismissed, you will need to file a motion asking the judge to vacate the dismissal **within 30 days of when it was dismissed**. This will re-open the case so you do not need to re-file it. Check with court clerk for the status of your case.
  % else:
    % if motion_type == "Reschedule a court date":
    Since the ${ reschedule_date } court date already passed, the judge can decide whether to hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should reschedule the court date.
    % elif motion_type == "Extend a deadline":
    Since the ${ current_deadline } deadline already passed, the judge can decide whether to hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should extend the deadline.
    % endif

    If a judgment was entered against you, you can file a Motion to Vacate a Default Judgment **within 30 days of when the court order was entered.** Check with court clerk for the status of your case.
    
    To learn more, read ILAO's article about [**vacating a default judgment**](https://www.illinoislegalaid.org/node/32421).
  % endif

---
id: beyond 30 days
continue button field: beyond_30_days
question: |
  More than 30 days
subquestion: |
  % if party_label == "plaintiff" or party_label == "petitioner":
    % if motion_type == "Reschedule a court date":
    Since the ${ reschedule_date } court date already passed, the judge might not hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should reschedule the court date.
    % elif motion_type == "Extend a deadline":
    Since the ${ current_deadline } deadline already passed, the judge might not hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should extend the deadline.
    % endif
    
    Your case might have been dismissed. If that happened, you will need to re-file it. Check with court clerk for the status of your case.
  % else:
    % if motion_type == "Reschedule a court date":
    Since the ${ reschedule_date } court date already passed, the judge might not hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should reschedule the court date.
    % elif motion_type == "Extend a deadline":
    Since the ${ current_deadline } deadline already passed, the judge might not hear your *Motion to Continue or Extend Time*. You will need a good reason for why the judge should extend the deadline.
    % endif

    Your case might have ended, and a judgment might have been entered against you. Check with court clerk for the status of your case.
    
    To learn more, read ILAO's article about [**undoing a default judgment after 30 days have passed**](https://www.illinoislegalaid.org/node/32391).
  % endif
---
id: original court date reason
question: |
  Why is there a court date on ${ reschedule_date }?
subquestion: |
  Your court papers should tell you what is going to happen in court on that date.
fields: 
  - no label: court_date_reason
    datatype: radio
    choices:
      - The judge will hear a motion.: Motion
      - We will have a trial.: Trial
      - We will give the judge a status update.: Status
      - Something else or I'm not sure why there is a court date.: Something else
---
id: continuance reason type
question: |
  Why do you need to reschedule the ${ reschedule_date } court date?
fields: 
  - no label: continue_reason_type
    datatype: radio
    choices:
      - My witness won't be available on that date.: Witness unavailable
        help: |
          Select this if you have not found the witness or if they are not available on ${ reschedule_date }. 
      - My evidence won't be available on that date.: Evidence unavailable
      - I need to reschedule for another reason.: Other
---
id: continuance reason
question: |
  Why do you need to reschedule?
subquestion: |
  The motion to continue has room for about 15 lines of text. You can preview it on the next screen.
fields:
  - I need to reschedule because:: continue_reason
    input type: area
    rows: 10

---
sets:
  - witness.name.first
id: witness name
question: |
  What is the name of the witness?
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      witness.name_fields(person_or_business='unsure')
---
id: know witness address
question: |
  Do you know ${ witness.name.full(middle="full") }'s address?
fields:
  - no label: know_witness_address
    datatype: yesnoradio  
---
id: witness address
question: |
  What is ${ witness.name.full(middle="full") }'s address?
fields:
  - Street address: witness.address.address
    address autocomplete: True
  - Address line 2: witness.address.unit
    required: False
  - City: witness.address.city
  - State: witness.address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: witness.address.zip  
---
id: use due diligence
question: |
  % if continue_reason_type == "Witness unavailable":
    % if know_witness_address:
    Did you use due diligence to get ${ witness.name.full(middle="full") } to testify on ${ reschedule_date }?
    % else:
    Did you use due diligence to find ${ witness.name.full(middle="full") }'s address?
    % endif
  % else:
    Did you use due diligence to get the evidence to court on ${ reschedule_date }?
  % endif
subquestion: |
  % if continue_reason_type == "Witness unavailable":
    % if know_witness_address:
    Using 'due diligence' means doing what is expected or reasonable to get ${ witness.name.full(middle="full") } to testify on ${ reschedule_date }.
    % else:
    Using 'due diligence' means doing what is expected or reasonable to find ${ witness.name.full(middle="full") }'s address.
    % endif
  % else:
    Using 'due diligence' means doing what is expected or reasonable to get the evidence (${ evidence_description }) to court on ${ reschedule_date }.
  % endif
fields:
  - no label: used_due_diligence
    datatype: yesnoradio  
---
id: no due diligence
event: no_due_diligence
question: |
  Sorry
subquestion: |
  To get your case rescheduled, 
  % if continue_reason_type == "Witness unavailable":
    % if know_witness_address:
    you must have used due diligence to get ${ witness.name.full(middle="full") } to testify on ${ reschedule_date }.
    % else:
    you must have used due diligence to find ${ witness.name.full(middle="full") }'s address.
    % endif
  % else:
    you must have used due diligence to get the evidence to court on ${ reschedule_date }.
  % endif

  Click **Back** if you made a mistake. Or you can talk with a lawyer to discuss your options. Use **[Get Legal Help](https://www.illinoislegalaid.org/get-legal-help)** to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart

---
id: due diligence explanation
question: |
  % if continue_reason_type == "Witness unavailable":
    % if know_witness_address:
    How did you try to get ${ witness.name.full(middle="full") } to testify on ${ reschedule_date }?
    % else:
    What did you to to find ${ witness.name.full(middle="full") }'s address?
    % endif
  % else:
    How did you try to get the evidence to court on ${ reschedule_date }?
  % endif
subquestion: |
  % if continue_reason_type == "Witness unavailable":
    % if know_witness_address:
    Describe everything you did to get ${ witness.name.full(middle="full") } to testify on ${ reschedule_date }.
    % else:
    Describe everything you did to get ${ witness.name.full(middle="full") }'s address.
    % endif
  % else:
    Describe everything you did to get the evidence (${ evidence_description }) to court on ${ reschedule_date }.
  % endif
fields:
  - Efforts: due_diligence_effort
    input type: area
    rows: 3
    maxlength: 150

---
id: reschedule date
question: |
  % if continue_reason_type == "Witness unavailable":
  When will ${ witness.name.full(middle="full") } be available to testify?
  % else:
  When will you be able to bring the evidence to court?
  % endif
subquestion: |
  % if continue_reason_type == "Witness unavailable":
  Enter a date when ${ witness.name.full(middle="full") } will be available.
  % else:
  Enter a date when the evidence (${ evidence_description }) will be available.
  % endif
fields:
  - Date witness available: available_date
    datatype: date
    min: ${ reschedule_date.format("yyyy-MM-dd") }
    show if: 
      code: |
        continue_reason_type == "Witness unavailable"
  - Date evidence available: available_date
    datatype: date
    min: ${ reschedule_date.format("yyyy-MM-dd") }
    show if:
      code: |
        continue_reason_type == "Evidence unavailable"


---
id: testimony summary
question: |
  % if continue_reason_type == "Witness unavailable":
  What will ${ witness.name.full(middle="full") } say in court?
  % else:
  What will the evidence (${ evidence_description }) show?
  % endif
subquestion: |
  % if continue_reason_type == "Witness unavailable":
  Explain the facts that ${ witness.name.full(middle="full") }'s testimony will show.
  % else:
  Explain the facts that the evidence will show.
  % endif
fields:
  - What testimony will show: witness_testimony
    input type: area
    rows: 3
    maxlength: 150
    show if:
      code: |
        continue_reason_type == "Witness unavailable"
  - What evidence will show: evidence_shows
    input type: area
    rows: 3
    maxlength: 150
    show if:
      code: |
        continue_reason_type == "Evidence unavailable"
---
id: evidence description
question: |
  What is the evidence you need for court?
subquestion: |
  Give a short description of the evidence. Try to be specific. For example, you can say:
  
  * a contract with a company,
  * cell phone records, or
  * a letter to someone.
  
  You can explain what the evidence will show on another screen.
fields:
  - The evidence is:: evidence_description
    maxlength: 60
---
# maybe remove these depends on vars since reconsider is set to true at bottom of code block
depends on:
  - continue_reason_type
  - witness.name
  - know_witness_address
  - used_due_diligence
  - due_diligence_effort
  - avaialable_date
  - witness_testimony
sets:
  - continue_reason
  - continue_reason_string_built
code: |
  if continue_reason_type == "Witness unavailable":
    temp_continue_reason = "1. The evidence is witness testimony from " + str(witness.name.full(middle='full')) + ".\n"
  
    if know_witness_address:
      temp_continue_reason += "2. I have used due diligence to get " + str(witness.name.full(middle='full')) + " to testify on " + reschedule_date + ". Specifically, I have: " + due_diligence_effort.rstrip('.') + ".\n3. The evidence will show the following: " + witness_testimony.rstrip('.') + ".\n4. The witness, " + str(witness.name.full(middle='full')) + ", resides at " + str(witness.address.on_one_line(bare=True)) + ".\n5. "
    else:
      temp_continue_reason += "2. The witness's address is unknown. I have used due diligence to find where " + str(witness.name.full(middle='full')) + " lives. Specifically, I have done the following: " + due_diligence_effort.rstrip('.') + ".\n3. The evidence will show the following: " + witness_testimony.rstrip('.') + ".\n4. "

    temp_continue_reason += "If I am given more time, I can get the witness by " + available_date + "."
    
  else:
    temp_continue_reason = "1. The evidence is: " + evidence_description.rstrip('.') + ".\n"
    temp_continue_reason += "2. I have used due diligence to get " + evidence_description.rstrip('.') + " to court on " + reschedule_date + ". Specifically, I have: " + due_diligence_effort.rstrip('.') + ".\n3. The evidence will show the following: " + evidence_shows.rstrip('.')
    temp_continue_reason += ".\n4. If I am given more time, I can get " + evidence_description.rstrip('.') + " by " + available_date + "."

  continue_reason = "Evidence material to my case is not available on " + reschedule_date + ". Therefore, I ask the court for more time to get it.\n" + str(temp_continue_reason)
  continue_reason_string_built = True
reconsider: True
---  
id: unfinished task
question: |
  What do you need more time to do?
subquestion: |
  In a few words, explain what you need more time to do. On the next screens, you can explain:
  
  * The current deadline,
  * The new deadline you want, and
  * Why you need more time.
fields:
  - I need more time to:: unfinished_task
    maxlength: 60
---
id: current deadline
question: |
  What is the **current** deadline?
fields:
  - Current deadline: current_deadline
    datatype: date
    #min: ${ today().format("yyyy-MM-dd") }
---
id: new deadline
question: |
  What is the **new** deadline you want?
fields:
  - New deadline: new_deadline
    datatype: date
    min: ${ current_deadline.format("yyyy-MM-dd") }
---  
id: extend time reason
question: |
  Why do you need until ${ new_deadline }?
subquestion: |
  Explain how the new deadline will let you "${ unfinished_task }" by ${ new_deadline }.

  The motion to extend time has room for about 5 lines of text. You can preview it on the next screen.
fields:
  - I need more time because: extension_reason
    input type: area
    rows: 5
    maxlength: 350
---
id: preview motion to continue or extend
continue button field: preview_continue_or_extend
reconsider:
  - motion_continue_attachment['preview']
question: |
  Motion to Continue or Extend Time preview
subquestion: |
  Click the below image to preview your Motion to Continue or Extend Time.
  
  If this looks good, click **Next**.
  
  If you want to make changes, click **Back** or go to the [**Motion details**](${ url_action('section_motion') }) section.
  
  If you want to add another page, you can enter more text.
  
  **Note: this is not a complete form.** Finish the program to get all your forms.
 
  ${ pdf_concatenate(motion_continue_attachment['preview'], filename="motion-continue-preview.pdf") }

  **Note: this is not a complete form.** Finish the program to get all your forms.




---
id: phone number
question: |
  What is your phone number?
subquestion: |
  If you do not want to list your phone number on your form, leave this blank.
fields:
  - Phone: users[0].phone_number
    datatype: al_international_phone
    required: False
---
id: notice by email
question: |
  Do you have an email address?
subquestion: |
  If you have an email address, you must list it so the court and other parties can contact you about this case.
fields:
  - "Email?": users[0].email_notice
    datatype: yesnoradio
---
id: email address
question: |
  What email address do you want to list on your court forms?
subquestion: |
  If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  Be sure to check this email daily, otherwise you may miss important information about your case.
fields:
  - Email address: users[0].email    
    datatype: email
    #required: False
---
id: e-signature
question: |
  Do you want to add your e-signature to your ${ form_name }?
subquestion: |
  If you do not add your **{e-signature}**, you must sign your paper form before you file and deliver it.

  ${ collapse_template(signature_help) }  
fields:
  - "Add e-signature?": e_signature
    datatype: yesnoradio
terms:
  - "e-signature": |
      An e-signature is an electronic signature. It is a digital version of a signature that has the same effect as a hand-written signature. 
---
template: signature_help
subject: |
  **What does it mean to sign the *Motion*?**
content: |  
  By signing your *Motion*, you are certifying that:
  
  * Everything on the form is true and correct, and
  * You understand that making a false statement on the form is perjury, which can result in criminal penalties.
  
  See the [**Code of Civil Procedure, 735 ILCS 5/1-109**](https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm), for more information.
---
id: notice intro
continue button field: notice_intro
question: |
  Tell all other parties in your case about your motion
subquestion: |
  These are the other parties in this case: ${comma_and_list(delivery_parties)}.

  You must tell them about your motion and when you will present it to the judge.

  If someone in the case has a lawyer, you must tell their lawyer.

---
depends on:
  - trial_court_index
  - cook_district
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', cook_district)
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
    
  court_name = str(trial_court.name)
  court_street_address = str(trial_court.address.address)
  court_city = str(trial_court.address.city)
  court_state = str(trial_court.address.state)
  court_zip = str(trial_court.address.zip)
  courthouse_info = court_name + ", " + court_street_address + ", " + court_city + ", " + court_state + " " + court_zip
---
id: Cook County district
question: |
  In which Cook County courthouse is your case?
subquestion: |
  This information should be found near the top of your court papers.

  ${ collapse_template(cook_district_help) }  
field: cook_district
choices:
  - First Municipal District, Daley Center, 50 W. Washington Street, Chicago: 15
  - Second Municipal District, 5600 Old Orchard Road, Skokie: 16
  - Third Municipal District, 2121 Euclid Avenue, Rolling Meadows: 17
  - Fourth Municipal District, 1500 Maybrook Drive, Maywood: 18
  - Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview: 19
  - Sixth Municipal District, 16501 South Kedzie Parkway, Markham: 20
  - Domestic Violence Court, 555 W. Harrison Street, Chicago: 21
  - George N. Leighton Criminal Court Building, 2600 S. California Avenue, Chicago: 22
  - Juvenile Center, 2245 West Ogden Avenue, Chicago: 23
---
template: cook_district_help
subject: |
  **What if I am still not sure?**
content: |  
  Visit **[Illinois Court Help](https://www.ilcourthelp.gov/)**, or you can call or text (833) 411-1121 for assistance.

---
id: hearing scheduled
question: |
  Do you already have a court date scheduled for this motion?
subquestion: |
  In some counties, the circuit clerk can give you a hearing date before you file your motion. In other counties, you will get a hearing date when you file your motion. If you have this information now, you can add it to your forms.
  
  If the clerk gives you the hearing date after you file your *Motion*, you can add it to your *Notice of Court Date for Motion* later.
fields:
  - "Know court date and time?": has_court_date
    datatype: yesnoradio
---
id: hearing info
question: |
  Court hearing information
subquestion: |
  Enter the date, time, and courtroom information for the court hearing on your motion. If the clerk did not give you a courtroom yet, leave it blank. You can add this information to the *Notice of Court Date for Motion* after you file your *Motion*.
fields:
  - Date: hearing_date
    datatype: date
    min: ${ today().format("yyyy-MM-dd") }
  - Time: hearing_time
    datatype: time
  - Courtroom: courtroom
    maxlength: 10
    required: False
---
reconsider: True
code: |
  delivery_parties = DAList("delivery_parties", elements = other_parties + users[1:])
# changed order to keep it a DAList
---
id: extra delivery forms required
continue button field: extra_delivery_forms
question: |
  Additional Proof of Delivery
subquestion: |
  This program makes the Proof of Delivery forms for the first 8 parties.
  
  You will need to fill out *Additional Proof of Delivery* forms for the other parties in your case. 
  
  You can download blank *Additional Proof of Delivery* forms at the end of this program.
---
id: delivery intro
continue button field: delivery_intro
question: |
  Send your ${ form_name } to all other parties
subquestion: |
  These are the other parties in this case: ${comma_and_list(delivery_parties)}.

  You must send a copy of your ${ form_name } to each of them.

  If someone in the case has a lawyer, you must send it to the lawyer.
---
id: has lawyer
generic object: ALIndividual
question: |
  Does ${ x.name.full(middle="full") } have a lawyer in this case?
field: x.is_represented
choices:
  - Yes: True
  - No: False
  - I don't know: null 
# note: null will be None in review screen
---
id: add lawyer
generic object: ALIndividual
question: |
  Who is  ${ x.name.full(middle="full") }'s lawyer?
fields:
  - First name: x.lawyer.name.first
  - Middle name: x.lawyer.name.middle
    required: False
  - Last name: x.lawyer.name.last
  - Suffix: x.lawyer.name.suffix
    code: |
      name_suffix()
    required: False  
---
id: delivery party address
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
generic object: ALIndividual
question: |
  % if x.is_represented:
  What is ${ x.lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ x.name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: x.address.address
    address autocomplete: True
  - Address line 2: x.address.unit
    required: False
  - City: x.address.city
  - State: x.address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: x.address.zip
---
#added to remove same as / someplace else default in ql_baseline.yml
id: users delivery party address
sets:
  - users[i].address.address
  - users[i].address.city
  - users[i].address.zip
generic object: ALIndividual
question: |
  % if users[i].is_represented:
  What is ${ users[i].lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ users[i].name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: users[i].address.address
    address autocomplete: True
  - Address line 2: users[i].address.unit
    required: False
  - City: users[i].address.city
  - State: users[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[i].address.zip

---
id: knows delivery method
generic object: ALIndividual
question: |
  % if x.is_represented:
  Do you know **how** and **when** you will send your ${ form_name } to ${ x.lawyer.name.full(middle="full") }?
  % else:
  Do you know **how** and **when** you will send your ${ form_name } to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  ${ collapse_template(delivery_method_help) }  

  If you do not know this now, you can add it to the Proof of Delivery section of your forms later.
field: x.knows_delivery_method
choices:
  - Yes: True
  - No: False
---
template: delivery_method_help
subject: |
  **What are my delivery options?**
content: |  
  You can deliver the forms by:
  
  * The court's **{e-filing system}**,
  * Email,
  * US mail or a delivery company (like UPS or FedEx), or
  * Hand delivery.

  You may use US mail, a delivery company, or hand delivery if you or the other party **does not** have an email address.
terms:
  - e-filing system: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
---
id: user party delivery method
#changed from generic object to users to allow for changing answers via Back
#generic object: ALIndividual
question: |
  % if users[i].is_represented:
  How will you send your ${ form_name } to ${ users[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your ${ form_name } to ${ users[i].name.full(middle="full") }?
  % endif
subquestion: |  
  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.

  You may use US mail, a delivery company, or hand delivery if you or the other party **does not** have an email address.
  
  ${ collapse_template(efiling_help) }  
fields:
  - E-filing system: users[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
  - Email: users[i].email_delivery
    datatype: yesnowide
  - Email address: users[i].delivery_email
    datatype: email
    show if: 
      variable: users[i].email_delivery
      is: True
    required: False
  - US mail or delivery company (like UPS or FedEx): users[i].mail_delivery
    datatype: yesnowide
  - Hand delivery: users[i].hand_delivery
    datatype: yesnowide
---
template: efiling_help
subject: |
  **What if I need help?**
content: |  
  If you need help delivering by email or using the e-filing service provider, you can visit a [**Legal Self-Help Center**](https://www.illinoislegalaid.org/get-legal-help/lshc-directory) or you can call or text [**Illinois Court Help**](https://www.ilcourthelp.gov) at 833-411-1121.
---
id: other party delivery method
# generic object: ALIndividual
#changed from generic object to other_parties to allow for changing answers via Back
question: |
  % if other_parties[i].is_represented:
  How will you send your ${ form_name } to ${ other_parties[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your ${ form_name } to ${ other_parties[i].name.full(middle="full") }?
  % endif
subquestion: |  
  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.

  You may use US mail, a delivery company, or hand delivery if you or the other party **does not** have an email address.
  
  ${ collapse_template(efiling_help) }  
fields:
  - E-filing system: other_parties[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
  - Email: other_parties[i].email_delivery
    datatype: yesnowide
  - Email address: other_parties[i].delivery_email
    datatype: email
    show if: 
      variable: other_parties[i].email_delivery
      is: True
    required: False
  - US mail or delivery company (like UPS or FedEx): other_parties[i].mail_delivery
    datatype: yesnowide
  - Hand delivery: other_parties[i].hand_delivery
    datatype: yesnowide
---
id: delivery time
generic object: ALIndividual
question: |
  % if x.is_represented:
  When will you send your ${ form_name } to ${ x.lawyer.name.full(middle="full") }?
  % else:
  When will you send your ${ form_name } to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.
fields:
  - Date: x.delivery_date
    datatype: date
    required: False
    min: ${ today().format("yyyy-MM-dd") }
    max: ${ today().plus(years=1) }
  - Time: x.delivery_time
    datatype: time
    required: False
validation code: |
  if (not showifdef('x.delivery_date')):
    x.knows_delivery_date = False
  else:
    x.knows_delivery_date = True
  if (not showifdef('x.delivery_time')):
    x.knows_delivery_time = False
  else:
    x.knows_delivery_time = True
    
---
id: hand delivery info
continue button field: hand_delivery_info
question: |
  Check your Proof of Delivery
subquestion: |
  **Don't forget!** Make sure you review and complete the Proof of Delivery section of your forms. 
  
  [FILE proof_of_delivery_snip.png, 100%, Proof of Delivery section of forms]

  **Instructions when delivering your forms by hand:**

  * If a party in your case does not have a lawyer, you can hand-deliver the forms to them or to a family member who is 13 or older at their home.
  * If they do have a lawyer, you can hand-deliver the forms to the lawyer or to the lawyer's office.

---
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.

  This program does not file your Motion with the court or deliver it to other parties in your case. You will need to do this yourself. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program does not file your Motion with the court or deliver it to other parties in your case. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).
  
  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Motion forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---
objects:
  #- motion_attachment: ALDocument.using(title="Motion", filename="motion.pdf", has_addendum=True, default_overflow_message=" [Continued on Additional Motion]")
  - motion_instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - motion_attachment: ALDocument.using(title="Motion", filename="motion.pdf", has_addendum=False)
  - additional_motion_attachment: ALDocument.using(title="Additional Motion", filename="additional_motion.pdf", has_addendum=False)
  - motion_additional_delivery: ALDocument.using(title="Additional Proof of Delivery", filename="motion_additional_proof_delivery.pdf", has_addendum=False)
  - motion_additional_delivery_2: ALDocument.using(title="Additional Proof of Delivery 2", filename="appearance_additional_proof_delivery_2.pdf", has_addendum=False)
  - motion_additional_delivery_3: ALDocument.using(title="Additional Proof of Delivery 3", filename="appearance_additional_proof_delivery_3.pdf", has_addendum=False)
  - motion_additional_delivery_blank: ALDocument.using(title="Additional Proof of Delivery (blank)", filename="motion_additional_proof_delivery_blank.pdf", has_addendum=False)
  - notice_attachment: ALDocument.using(title="Notice of Court Date for Motion", filename="notice_of_court_date.pdf", has_addendum=False)
  - motion_order: ALDocument.using(title="Order", filename="order.pdf", has_addendum=False)
  - motion_continue_instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - motion_continue_attachment: ALDocument.using(title="Motion to Continue or Extend Time", filename="motion.pdf", has_addendum=False)
  - motion_continue_order: ALDocument.using(title="Order", filename="order.pdf", has_addendum=False)
  
---
code: |
  motion_attachment.enabled = False
  additional_motion_attachment.enabled = False
  motion_instructions.enabled = False
  motion_additional_delivery.enabled = False
  motion_additional_delivery_2.enabled = False
  motion_additional_delivery_3.enabled = False
  motion_additional_delivery_blank.enabled = False
  notice_attachment.enabled = False
  motion_order.enabled = False
  motion_continue_attachment.enabled = False
  motion_continue_instructions.enabled = False
  motion_continue_order.enabled = False 
  motion_single_pdf_bundle.enabled = False
  motion_continue_single_pdf_bundle.enabled = False

  if anyone_opposing == True:
    if delivery_parties.number() < 3:
      notice_attachment.enabled = True
    elif delivery_parties.number() < 5:
      motion_additional_delivery.enabled = True
      notice_attachment.enabled = True
    elif delivery_parties.number() < 7:
      motion_additional_delivery.enabled = True
      motion_additional_delivery_2.enabled = True
      notice_attachment.enabled = True
    elif delivery_parties.number() < 9:
      motion_additional_delivery.enabled = True
      motion_additional_delivery_2.enabled = True
      motion_additional_delivery_3.enabled = True
      notice_attachment.enabled = True
    else:
      motion_additional_delivery.enabled = True
      motion_additional_delivery_2.enabled = True
      motion_additional_delivery_3.enabled = True
      motion_additional_delivery_blank.enabled = True
      notice_attachment.enabled = True
      
  if motion_type == "Something else":   
    motion_attachment.enabled = True
    motion_instructions.enabled = True
    motion_order.enabled = True
    if motion_additional_page == True:
      additional_motion_attachment.enabled = True
    motion_single_pdf_bundle.enabled = True
    motion_continue_single_pdf_bundle.enabled = False
  else:
    motion_continue_attachment.enabled = True
    motion_continue_instructions.enabled = True
    motion_continue_order.enabled = True 
    motion_single_pdf_bundle.enabled = False
    motion_continue_single_pdf_bundle.enabled = True

---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[motion_instructions, motion_continue_instructions, motion_single_pdf_bundle, motion_continue_single_pdf_bundle, motion_additional_delivery_blank, notice_single_pdf_bundle, motion_order, motion_continue_order], filename="motion.pdf", title="Download all forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[motion_single_pdf_bundle, motion_continue_single_pdf_bundle, notice_single_pdf_bundle, motion_order, motion_continue_order], filename="motion.pdf", title="Motion")
---
objects:
  - motion_single_pdf_bundle: ALDocumentBundle.using(elements=[motion_attachment, additional_motion_attachment, motion_additional_delivery, motion_additional_delivery_2, motion_additional_delivery_3], filename="motion.pdf", title="Motion")
  - motion_continue_single_pdf_bundle: ALDocumentBundle.using(elements=[motion_continue_attachment, motion_additional_delivery, motion_additional_delivery_2, motion_additional_delivery_3], filename="motion.pdf", title="Motion to Continue or Extend Time")
  - notice_single_pdf_bundle: ALDocumentBundle.using(elements=[notice_attachment, additional_motion_attachment, motion_additional_delivery, motion_additional_delivery_2, motion_additional_delivery_3], filename="notice.pdf", title="Notice of Court Date for Motion", enabled=True)
---
#code: |
#  motion_attachment.overflow_fields['motion_body'].overflow_trigger = 1280
#  motion_attachment.overflow_fields.gathered = True  
#
---
attachment:
  variable name: motion_instructions[i]
  name: motion_instructions
  filename: motion-instructions
  skip undefined: True
  editable: False
  pdf template file: motion_instructions.pdf
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: motion_continue_instructions[i]
  name: motion_to_continue_instructions
  filename: motion-to-continue-instructions
  skip undefined: True
  editable: False
  pdf template file: motion_continue_instructions.pdf
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: motion_attachment[i]
  name: motion
  filename: motion
  skip undefined: True
  editable: False
  pdf template file: motion.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}

      - "user__1": ${ users[0].name.full(middle="full") }
      - "user__2": ${ users[0].name.full(middle="full") }
      - "user__3": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one__1": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_line_one__2": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip__1": ${ users[0].address.line_two() }
      - "user_mail_address_city_state_zip__2": ${ users[0].address.line_two() }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_phone_number__2": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "user_email__2": ${ users[0].email if users[0].email_notice else '' }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "case_number__3": ${ case_number }
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "e_sign_name__2": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "is_email_notice_yes": ${ users[0].email_notice }
      - "motion_by_plaintiff": ${ party_label == "plaintiff" or party_label == "petitioner" }
      - "motion_by_defendant": ${ party_label == "defendant" or party_label == "respondent" }
      - "motion_summary": ${ motion_summary }
      #- "motion_body": ${ motion_attachment.safe_value('motion_body', preserve_newlines=True) }
      - "motion_body": ${ motion_body }
      - "additional_motion_cb": ${ True if motion_additional_page else '' }
      
      - "delivery_party1_name_full": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[0].delivery_time, format='h:mm') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='PM' else '' }

      - "delivery_party2_name_full": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[1].delivery_time, format='h:mm') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='PM' else '' }

      - "is_additional_proof_delivery_yes": ${ delivery_parties.number() > 2 }
---
#---
#attachment:
#  variable name: motion_attachment.addendum
#  pdf template file: additional_motion.pdf
#  skip undefined: True
#  editable: False
#  fields:
#      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
#      - "trial_court_county": ${ trial_court.address.county.upper() }
#      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
#      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}
#      
#      - "case_number__1": ${ case_number }
#      - "motion_summary": ${ motion_summary }
#      - "motion_body": ${ motion_attachment.overflow_value('motion_body', preserve_newlines=True) }

---
attachment:
  variable name: additional_motion_attachment[i]
  name: additional_motion
  filename: additional-motion
  pdf template file: additional_motion.pdf
  skip undefined: True
  editable: False
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}
      
      - "case_number__1": ${ case_number }
      - "motion_summary": ${ motion_summary }
      - "motion_body": ${ additional_motion_body }
---
attachment:
  variable name: motion_continue_attachment[i]
  name: motion_to_continue
  filename: motion-to-continue
  skip undefined: True
  editable: False
  pdf template file: motion_to_continue.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}

      - "user__1": ${ users[0].name.full(middle="full") }
      - "user__2": ${ users[0].name.full(middle="full") }
      - "user__3": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one__1": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_line_one__2": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip__1": ${ users[0].address.line_two() }
      - "user_mail_address_city_state_zip__2": ${ users[0].address.line_two() }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_phone_number__2": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "user_email__2": ${ users[0].email if users[0].email_notice else '' }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "case_number__3": ${ case_number }
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "e_sign_name__2": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "is_email_notice_yes": ${ users[0].email_notice }
      - "motion_by_plaintiff": ${ party_label == "plaintiff" or party_label == "petitioner" }
      - "motion_by_defendant": ${ party_label == "defendant" or party_label == "respondent" }

      - "continue_cb": ${ motion_type == "Reschedule a court date"}
      - "court_date_reason_motion": ${ court_date_reason == "Motion" if motion_type == "Reschedule a court date" else ''}
      - "court_date_reason_trial": ${ court_date_reason == "Trial" if motion_type == "Reschedule a court date" else ''}
      - "court_date_reason_status": ${ court_date_reason == "Status" if motion_type == "Reschedule a court date" else ''}
      - "court_date_reason_other": ${ court_date_reason == "Something else" if motion_type == "Reschedule a court date" else ''}
      - "court_date_original": ${ reschedule_date  if motion_type == "Reschedule a court date" else ''}
      - "court_time_original": ${ format_time(reschedule_time, format='h:mm')  if motion_type == "Reschedule a court date" else ''}
      - "court_time_original_am": ${ (True if format_time(reschedule_time, format='a')=='AM' else '') if motion_type == "Reschedule a court date" else '' }
      - "court_time_orginal_pm": ${ (True if format_time(reschedule_time, format='a')=='PM' else '') if motion_type == "Reschedule a court date" else '' }
      - "continue_reason": ${ continue_reason if motion_type == "Reschedule a court date" else ''}

      - "extend_cb": ${ motion_type == "Extend a deadline"}
      - "extend_task": ${ unfinished_task if motion_type == "Extend a deadline" else '' }
      - "extend_current_deadline": ${ current_deadline if motion_type == "Extend a deadline" else '' }
      - "extend_new_deadline": ${ new_deadline if motion_type == "Extend a deadline" else '' }
      - "extend_reason_next_page": ${ 'See explanation on next page.' if motion_type == "Extend a deadline" else '' }
      - "extend_reason": ${ "I need more time because " + extension_reason if motion_type == "Extend a deadline" else '' }

      - "delivery_party1_name_full": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[0].delivery_time, format='h:mm') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='PM' else '' }

      - "delivery_party2_name_full": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[1].delivery_time, format='h:mm') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='PM' else '' }

      - "is_additional_proof_delivery_yes": ${ delivery_parties.number() > 2 }
---
attachment:
  variable name: motion_additional_delivery[i]
  name: motion_additional_delivery
  filename: motion-additional-delivery
  skip undefined: True
  editable: False
  pdf template file: motion_additional_proof_delivery.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}


      - "form_to_be_delivered": ${ form_name if motion_type == "Something else" else form_name + " to Continue or Extend Time" }
      - "delivery_party1_name_full": | 
          % if delivery_parties[2].is_represented:
          ${ delivery_parties[2].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[2].name.full(middle="full") })
          % else:
          ${ delivery_parties[2].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[2].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[2].delivery_email if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[2].hand_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[2].mail_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[2].efm_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[2].email_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[2].delivery_date if delivery_parties[2].knows_delivery_method and delivery_parties[2].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[2].delivery_time, format='h:mm') if delivery_parties[2].knows_delivery_method and delivery_parties[2].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if delivery_parties[2].knows_delivery_method and format_time(delivery_parties[2].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if delivery_parties[2].knows_delivery_method and format_time(delivery_parties[2].delivery_time, format='a')=='PM' else '' }
      
      - "delivery_party2_name_full": | 
          % if delivery_parties[3].is_represented:
          ${ delivery_parties[3].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[3].name.full(middle="full") })
          % else:
          ${ delivery_parties[3].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[3].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[3].delivery_email if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[3].hand_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[3].mail_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[3].efm_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[3].email_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[3].delivery_date if delivery_parties[3].knows_delivery_method and delivery_parties[3].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[3].delivery_time, format='h:mm') if delivery_parties[3].knows_delivery_method and delivery_parties[3].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if delivery_parties[3].knows_delivery_method and format_time(delivery_parties[3].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if delivery_parties[3].knows_delivery_method and format_time(delivery_parties[3].delivery_time, format='a')=='PM' else '' }

      - "user": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
      - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "e_sign_name": ${ users[0].name.full(middle="full") if e_signature else '' }
---
attachment:
  variable name: motion_additional_delivery_2[i]
  name: motion_additional_delivery_2
  filename: motion-additional-delivery-2
  skip undefined: True
  editable: False
  pdf template file: motion_additional_proof_delivery.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}

      - "form_to_be_delivered": ${ form_name }

      - "delivery_party1_name_full": | 
          % if delivery_parties[4].is_represented:
          ${ delivery_parties[4].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[4].name.full(middle="full") })
          % else:
          ${ delivery_parties[4].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[4].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[4].delivery_email if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[4].hand_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[4].mail_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[4].efm_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[4].email_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[4].delivery_date if delivery_parties[4].knows_delivery_method and delivery_parties[4].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[4].delivery_time, format='h:mm') if delivery_parties[4].knows_delivery_method and delivery_parties[4].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if delivery_parties[4].knows_delivery_method and format_time(delivery_parties[4].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if delivery_parties[4].knows_delivery_method and format_time(delivery_parties[4].delivery_time, format='a')=='PM' else '' }
      
      - "delivery_party2_name_full": | 
          % if delivery_parties[5].is_represented:
          ${ delivery_parties[5].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[5].name.full(middle="full") })
          % else:
          ${ delivery_parties[5].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[5].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[5].delivery_email if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[5].hand_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[5].mail_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[5].efm_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[5].email_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[5].delivery_date if delivery_parties[5].knows_delivery_method and delivery_parties[5].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[5].delivery_time, format='h:mm') if delivery_parties[5].knows_delivery_method and delivery_parties[5].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if delivery_parties[5].knows_delivery_method and format_time(delivery_parties[5].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if delivery_parties[5].knows_delivery_method and format_time(delivery_parties[5].delivery_time, format='a')=='PM' else '' }

      - "user": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
      - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "e_sign_name": ${ users[0].name.full(middle="full") if e_signature else '' }
---
attachment:
  variable name: motion_additional_delivery_3[i]
  name: motion_additional_delivery_3
  filename: motion-additional-delivery-3
  skip undefined: True
  editable: False
  pdf template file: motion_additional_proof_delivery.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}

      - "form_to_be_delivered": ${ form_name }

      - "delivery_party1_name_full": | 
          % if delivery_parties[6].is_represented:
          ${ delivery_parties[6].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[6].name.full(middle="full") })
          % else:
          ${ delivery_parties[6].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[6].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[6].delivery_email if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[6].hand_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[6].mail_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[6].efm_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[6].email_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[6].delivery_date if delivery_parties[6].knows_delivery_method and delivery_parties[6].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[6].delivery_time, format='h:mm') if delivery_parties[6].knows_delivery_method and delivery_parties[6].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if delivery_parties[6].knows_delivery_method and format_time(delivery_parties[6].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if delivery_parties[6].knows_delivery_method and format_time(delivery_parties[6].delivery_time, format='a')=='PM' else '' }
      
      - "delivery_party2_name_full": | 
          % if delivery_parties[7].is_represented:
          ${ delivery_parties[7].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[7].name.full(middle="full") })
          % else:
          ${ delivery_parties[7].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[7].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[7].delivery_email if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[7].hand_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[7].mail_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[7].efm_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[7].email_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[7].delivery_date if delivery_parties[7].knows_delivery_method and delivery_parties[7].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[7].delivery_time, format='h:mm') if delivery_parties[7].knows_delivery_method and delivery_parties[7].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if delivery_parties[7].knows_delivery_method and format_time(delivery_parties[7].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if delivery_parties[7].knows_delivery_method and format_time(delivery_parties[7].delivery_time, format='a')=='PM' else '' }
      
      - "user": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
      - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "e_sign_name": ${ users[0].name.full(middle="full") if e_signature else '' }
---
attachment:
  variable name: motion_additional_delivery_blank[i]
  name: motion_additional_delivery_blank
  filename: motion-additional-delivery-blank
  skip undefined: True
  editable: True
  pdf template file: motion_additional_proof_delivery.pdf
  fields:
      - "trial_court_county": ${ "" }
---
attachment:
  variable name: notice_attachment[i]
  name: notice
  filename: notice
  skip undefined: True
  editable: False
  pdf template file: notice_of_court_date.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}

      - "user__1": ${ users[0].name.full(middle="full") }
      - "user__2": ${ users[0].name.full(middle="full") }
      - "user__3": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one__1": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_line_one__2": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip__1": ${ users[0].address.line_two() }
      - "user_mail_address_city_state_zip__2": ${ users[0].address.line_two() }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_phone_number__2": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "user_email__2": ${ users[0].email if users[0].email_notice else '' }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "case_number__3": ${ case_number }
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "e_sign_name__2": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "is_email_notice_yes": ${ users[0].email_notice }

      - "hearing_date": ${ hearing_date if (defined('hearing_date') and has_court_date) else '' }
      - "hearing_time": ${ format_time(hearing_time, format='h:mm') if (defined('hearing_time') and has_court_date) else '' }
      - "hearing_am_checkbox": ${ True if (has_court_date and format_time(hearing_time, format='a')=='AM') else '' }
      - "hearing_pm_checkbox": ${ True if (has_court_date and format_time(hearing_time, format='a')=='PM') else '' }
      - "hearing_courtroom": ${ courtroom if has_court_date else '' }
      - "courthouse_address": ${ courthouse_info }
      - "clerk_phone": ${ trial_court.phone }
      - "clerk_website": ${ trial_court.website }

      - "delivery_party1_name_full": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[0].delivery_time, format='h:mm') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='PM' else '' }

      - "delivery_party2_name_full": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[1].delivery_time, format='h:mm') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='PM' else '' }

      - "is_additional_proof_delivery_yes": ${ delivery_parties.number() > 2 }
---
attachment:
  variable name: motion_order[i]
  name: order
  filename: order
  skip undefined: True
  editable: False
  pdf template file: order_on_motion.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}
      - "case_number__1": ${ case_number }
---
attachment:
  variable name: motion_continue_order[i]
  name: order
  filename: order
  skip undefined: True
  editable: False
  pdf template file: order_on_motion_to_continue.pdf
  fields:
      - "in_re": ${ "In re:" if in_re_check == True else ""} ${ in_re_label if in_re_check == True else ""}
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if party_label == "plaintiff" or party_label == "petitioner" else other_parties.full_names()}
      - "defendants": ${list_defendants(users.full_names(), other_parties.full_names(), anyone_opposing, party_label)}
      - "case_number__1": ${ case_number }



---
############### Review page
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: party_label
    button: |
      **Party label:**
      ${ party_label }
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: anyone_opposing
    button: |
      % if party_label == "plaintiff":
      **Any defendants?**
      ${word(yesno(anyone_opposing))}
      % else:
      **Any respondents?**
      ${word(yesno(anyone_opposing))}
      % endif
    show if: (party_label == 'plaintiff' or party_label == 'petitioner')
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: in_re_check
    button: |
      **Does the court case have "In re:" in the name?**  
      ${word(yesno(in_re_check))}
  - Edit: in_re_label
    button: |
      **In re:** ${in_re_label}
    show if: in_re_check
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where this case is filed:**
      ${ trial_court.address.county }
  - Edit: cook_district
    button: |
      **Cook County courthouse:**
      % if cook_district == "15":
      ${ "Daley Center, 50 W. Washington Street, Chicago" }
      % elif cook_district == "16":
      ${ "Second Municipal District, 5600 Old Orchard Road, Skokie" }
      % elif cook_district == "17":
      ${ "Third Municipal District, 2121 Euclid Avenue, Rolling Meadows" }
      % elif cook_district == "18":
      ${ "Fourth Municipal District, 1500 Maybrook Drive, Maywood" }
      % elif cook_district == "19":
      ${ "Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview" }
      % elif cook_district == "20":
      ${ "Sixth Municipal District, 16501 South Kedzie Parkway, Markham" }
      % elif cook_district == "21":
      ${ "Domestic Violence Court, 555 W. Harrison Street, Chicago" }
      % elif cook_district == "22":
      ${ "George N. Leighton Criminal Court Building, 2600 S. California Avenue, Chicago" }
      % else:
      ${ "Juvenile Center, 2245 West Ogden Avenue, Chicago" }
      % endif      
    show if: trial_court_index == -1      
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
  - Edit: motion_type
    button: |
      **Reason for motion:**
      ${ motion_type }
  - Edit: motion_summary
    button: |
      **Motion summary:**
      ${ motion_summary }
    show if: motion_type == "Something else"
  - Edit: motion_body
    button: |
      **Motion text:**
      ${ motion_body }
    show if: motion_type == "Something else"
  - Edit: motion_additional_page
    button: |
      **Do you want to add a second page to your motion?**  
      ${word(yesno(motion_additional_page))}
    show if: motion_type == "Something else"
  - Edit: additional_motion_body
    button: |
      **Additional motion text:**
      ${ additional_motion_body }
    show if: (motion_additional_page and motion_type == "Something else")
  - Edit: reschedule_date
    button: |
      **Original court date on:**
      ${ reschedule_date } at ${ format_time(reschedule_time, "h:mm a") }
    show if: motion_type == "Reschedule a court date"
  - Edit: court_date_reason
    button: |
      **Original court date reason:**
      ${ court_date_reason }
    show if: motion_type == "Reschedule a court date"
    
  - Edit: continue_reason_type
    button: |
      **Reschedule for witness, evidence, or other:**
      ${ continue_reason_type }
    show if: (motion_type == "Reschedule a court date")
  - Edit: continue_reason
    button: |
      **You need to reschedule because:**
      ${ continue_reason }
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Other")

  - Edit: witness.name.first
    button: |
      **Your witness:**
      ${ witness.name.full(middle='full') }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: know_witness_address
    button: |
      **Do you know the witness's address?**
      ${ word(yesno(know_witness_address)) }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: witness.address.address
    button: |
      **Witness address:**
      ${ witness.address.on_one_line(bare=True) }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable" and know_witness_address == True)
  - Edit: due_diligence_effort
    button: |
      % if know_witness_address:
      **How you used due diligence to get the witness:**
      % else:
      **How you used due diligence to find the witness:**
      % endif
      ${ due_diligence_effort }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: witness_testimony
    button: |
      **What the witness's testimony will show:**
      ${ witness_testimony }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: available_date
    button: |
      **Witness will be available on:**
      ${ available_date }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
    
  - Edit: evidence_description
    button: |
      **Your evidence:**
      ${ evidence_description }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
  - Edit: due_diligence_effort
    button: |
      **How you used due diligence to get the evidence:**
      ${ due_diligence_effort }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
  - Edit: evidence_shows
    button: |
      **What the evidence will show:**
      ${ evidence_shows }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
  - Edit: available_date
    button: |
      **Evidence will be available on:**
      ${ available_date }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
    
  - Edit: unfinished_task
    button: |
      **What you need more time to do:**
      ${ unfinished_task }
    show if: motion_type == "Extend a deadline"    
  - Edit: current_deadline
    button: |
      **Current deadline:**
      ${ current_deadline }
    show if: motion_type == "Extend a deadline"    
  - Edit: new_deadline
    button: |
      **New deadline:**
      ${ new_deadline }
    show if: motion_type == "Extend a deadline"    
  - Edit: extension_reason
    button: |
      **You need more time because:**
      ${ extension_reason }
    show if: motion_type == "Extend a deadline"        
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }
  - Edit: has_court_date
    button: |
      **Do you already have a court date for your motion from the clerk?**
      ${ word(yesno(has_court_date)) }
  - Edit: hearing_date
    button: |
      **Motion court date on:**
      ${ hearing_date } at ${ format_time(hearing_time, "h:mm a") }
    show if: has_court_date
  - Edit: courtroom
    button: |
      **Courtroom:**
      ${ courtroom }
    show if: has_court_date
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice
---
#needs: yes_no_unknown
id: delivery party review
continue button field: x.review_delivery
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
subquestion: |  
  % if x == users[0]:
  Edit your address, phone number, and email address in the [**About you**](${ url_action('section_about_you') }) section.
  % else:
  If you don't see lawyer, address, or delivery information, then it might not be entered yet. Continue the program to answer all the questions.
  % endif
review: 
  - Edit: x.name.first
    button: |
      **Party name:**
      ${ x.name.full(middle="full")  }
  - Edit: x.is_represented
    button: |
      **Does ${ x.name.full(middle="full") } have a lawyer?**
      % if x.is_represented is None:
      I don't know
      % else:
      ${ word(yesno(x.is_represented)) }
      % endif
  - Edit: x.lawyer.name.first
    button: |
      **Lawyer name:**
      ${ x.lawyer.name.full(middle="full") }
    show if: x.is_represented
  - Edit: x.address.address
    button: |
      % if x.is_represented == True:
      **${ x.lawyer.name.full(middle="full") }'s address: **
      % else:
      **${ x.name.full(middle="full") }'s address: **
      % endif
      ${ x.address.on_one_line(bare=True) }
  - Edit: x.knows_delivery_method
    button: |
      **Do you know how you will deliver your forms to them?**
      ${ word(yesno(x.knows_delivery_method)) }
  - Edit: x.hand_delivery
    button: |
      **Delivery by: (Edit to view and change details)**
      
      % if x.efm_delivery == True:
        * E-filing system
      % endif
      % if x.email_delivery == True:
        * Email
      % endif
      % if x.hand_delivery == True:
        * Hand
      % endif
      % if x.mail_delivery == True:
        * US mail or delivery company
      % endif
    show if: x.knows_delivery_method
  - Edit: x.delivery_date
    button: |
      **Delivery on:**
      ${ x.delivery_date } at ${ format_time(x.delivery_time, "h:mm a") }
    show if: x.knows_delivery_method
---
id: users review
continue button field: users.revisit
question: |
  Edit the ${ party_label }s
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: other parties review
continue button field: other_parties.revisit
question: |
  % if party_label == "plaintiff":
    Edit the defendants
  % elif party_label == "petitioner":
    Edit the respondents
  % elif party_label == "defendant":
    Edit the plaintiffs
  % else:
    Edit the petitioners
  % endif
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: case info review screen
event: section_case_info
question: |
  Case info
subquestion: |
  Edit your answers below.
review: 
  - Edit: party_label
    button: |
      **Party label:**
      ${ party_label }
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: anyone_opposing
    button: |
      % if party_label == "plaintiff":
      **Any defendants?**
      ${word(yesno(anyone_opposing))}
      % else:
      **Any respondents?**
      ${word(yesno(anyone_opposing))}
      % endif
    show if: (party_label == 'plaintiff' or party_label == 'petitioner')
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: in_re_check
    button: |
      **Does the court case have "In re:" in the name?**  
      ${word(yesno(in_re_check))}
  - Edit: in_re_label
    button: |
      **In re:** ${in_re_label}
    show if: in_re_check
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where this case is filed:**
      ${ trial_court.address.county }
  - Edit: cook_district
    button: |
      **Cook County courthouse:**
      % if cook_district == "15":
      ${ "Daley Center, 50 W. Washington Street, Chicago" }
      % elif cook_district == "16":
      ${ "Second Municipal District, 5600 Old Orchard Road, Skokie" }
      % elif cook_district == "17":
      ${ "Third Municipal District, 2121 Euclid Avenue, Rolling Meadows" }
      % elif cook_district == "18":
      ${ "Fourth Municipal District, 1500 Maybrook Drive, Maywood" }
      % elif cook_district == "19":
      ${ "Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview" }
      % elif cook_district == "20":
      ${ "Sixth Municipal District, 16501 South Kedzie Parkway, Markham" }
      % elif cook_district == "21":
      ${ "Domestic Violence Court, 555 W. Harrison Street, Chicago" }
      % elif cook_district == "22":
      ${ "George N. Leighton Criminal Court Building, 2600 S. California Avenue, Chicago" }
      % else:
      ${ "Juvenile Center, 2245 West Ogden Avenue, Chicago" }
      % endif      
    show if: trial_court_index == -1      
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
---
id: motion review screen
event: section_motion
question: |
  Motion details
subquestion: |
  Edit your answers below.
review:
  - Edit: motion_type
    button: |
      **Reason for motion:**
      ${ motion_type }
  - Edit: motion_summary
    button: |
      **Motion summary:**
      ${ motion_summary }
    show if: motion_type == "Something else"
  - Edit: motion_body
    button: |
      **Motion text:**
      ${ motion_body }
    show if: motion_type == "Something else"
  - Edit: motion_additional_page
    button: |
      **Do you want to add a second page to your motion?**  
      ${word(yesno(motion_additional_page))}
    show if: motion_type == "Something else"
  - Edit: additional_motion_body
    button: |
      **Additional motion text:**
      ${ additional_motion_body }
    show if: (motion_additional_page and motion_type == "Something else")
  - Edit: reschedule_date
    button: |
      **Original court date on:**
      ${ reschedule_date } at ${ format_time(reschedule_time, "h:mm a") }
    show if: motion_type == "Reschedule a court date"
  - Edit: court_date_reason
    button: |
      **Original court date reason:**
      ${ court_date_reason }
    show if: motion_type == "Reschedule a court date"
    
  - Edit: continue_reason_type
    button: |
      **Reschedule for witness, evidence, or other:**
      ${ continue_reason_type }
    show if: (motion_type == "Reschedule a court date")
  - Edit: continue_reason
    button: |
      **You need to reschedule because:**
      ${ continue_reason }
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Other")

  - Edit: witness.name.first
    button: |
      **Your witness:**
      ${ witness.name.full(middle='full') }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: know_witness_address
    button: |
      **Do you know the witness's address?**
      ${ word(yesno(know_witness_address)) }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: witness.address.address
    button: |
      **Witness address:**
      ${ witness.address.on_one_line(bare=True) }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable" and know_witness_address == True)
  - Edit: due_diligence_effort
    button: |
      % if know_witness_address:
      **How you used due diligence to get the witness:**
      % else:
      **How you used due diligence to find the witness:**
      % endif
      ${ due_diligence_effort }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: witness_testimony
    button: |
      **What the witness's testimony will show:**
      ${ witness_testimony }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
  - Edit: available_date
    button: |
      **Witness will be available on:**
      ${ available_date }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Witness unavailable")
    
  - Edit: evidence_description
    button: |
      **Your evidence:**
      ${ evidence_description }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
  - Edit: due_diligence_effort
    button: |
      **How you used due diligence to get the evidence:**
      ${ due_diligence_effort }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
  - Edit: evidence_shows
    button: |
      **What the evidence will show:**
      ${ evidence_shows }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
  - Edit: available_date
    button: |
      **Evidence will be available on:**
      ${ available_date }    
    show if: (motion_type == "Reschedule a court date" and continue_reason_type == "Evidence unavailable")
    
  - Edit: unfinished_task
    button: |
      **What you need more time to do:**
      ${ unfinished_task }
    show if: motion_type == "Extend a deadline"    
  - Edit: current_deadline
    button: |
      **Current deadline:**
      ${ current_deadline }
    show if: motion_type == "Extend a deadline"    
  - Edit: new_deadline
    button: |
      **New deadline:**
      ${ new_deadline }
    show if: motion_type == "Extend a deadline"    
  - Edit: extension_reason
    button: |
      **You need more time because:**
      ${ extension_reason }
    show if: motion_type == "Extend a deadline"        
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }
      
---
id: delivery info review screen
event: section_delivery
question: |
  Notice and delivery details
subquestion: |
  Edit your answers below.
review:
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: has_court_date
    button: |
      **Do you already have a court date for your motion from the clerk?**
      ${ word(yesno(has_court_date)) }
  - Edit: hearing_date
    button: |
      **Motion court date on:**
      ${ hearing_date } at ${ format_time(hearing_time, "h:mm a") }
    show if: has_court_date
  - Edit: courtroom
    button: |
      **Courtroom:**
      ${ courtroom }
    show if: has_court_date
      
---
id: about you review screen
event: section_about_you
question: |
  About you
subquestion: |
  Edit your answers below.
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${ users[0].name.full(middle="full") }
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice